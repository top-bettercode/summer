summer:
  logging:
    spilt-level:
      - error
      - warn
    request:
      include-path: /oauth/*
      include-request-body: true
      include-response-body: true
    slack:
      ignored-warn-logger:
        - org.springframework.security.oauth2.provider.endpoint.TokenEndpoint
  data:
    jpa:
      mybatis:
        configuration:
          map-underscore-to-camel-case: true

spring:
  security:
    filter:
      dispatcher-types: REQUEST
  mvc:
    dispatchOptionsRequest: true
  messages:
    cache-duration: PT10S
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: true
      WRITE_BIGDECIMAL_AS_PLAIN: true
      WRITE_ENUMS_USING_INDEX: true
      FAIL_ON_EMPTY_BEANS: false
    deserialization:
      FAIL_ON_UNKNOWN_PROPERTIES: false
    time-zone: Asia/Shanghai
    locale: zh_CN

  servlet:
    multipart:
      max-file-size: 100MB
      max-request-size: 200MB
      enabled: true

  data:
    web:
      pageable:
        one-indexed-parameters: true

  jpa:
    open-in-view: false
    properties:
      hibernate.format_sql: true
      hibernate.session.events.log.LOG_QUERIES_SLOWER_THAN_MS: 2000
  datasource:
    hikari:
      data-source-properties:
        tinyInt1isBit: false

server:
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,application/javascript,application/json
  tomcat:
    uri-encoding: UTF-8
  servlet:
    session:
      timeout: PT10M
    encoding:
      force: true
    context-path: /


management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    env:
      post:
        enabled: true


logging:
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} ${LOG_LEVEL_PATTERN:%5p} ${PID: } --- [%-6.6t] %-40.40logger{39} %20file:%-3line : %m%n${LOG_EXCEPTION_CONVERSION_WORD:%wEx}"
    file: ${logging.pattern.console}

  level:
    _org.springframework: warn
    org.springframework: warn
    org.springframework.boot.env.OriginTrackedYamlLoader: DEBUG
    org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver: error
    org.springframework.data.convert.CustomConversions: error
    org.springframework.boot.web.servlet.support.ErrorPageFilter: off
    org.mybatis.spring.mapper.ClassPathMapperScanner: error
    org.hibernate: warn
    org.hibernate.SQL: ${logging.level.root:warn}
    top.bettercode.summer.SQL: ${logging.level.org.hibernate.SQL}
    org.hibernate.SQL_SLOW: info
    org.hibernate.engine.jdbc.spi.SqlExceptionHelper: off
    org.redisson.connection.ClientConnectionsEntry: info
    org.redisson.command.RedisExecutor: info
    org.thymeleaf: warn
    org.jboss: warn
    org.quartz: warn
    org.apache: warn
    org.mybatis: warn
    org.mongodb: warn
    com.ulisesbocchio.jasyptspringboot.EncryptablePropertySourceConverter: warn
    com.ulisesbocchio.jasyptspringboot.filter.DefaultLazyPropertyFilter: warn
    com.ulisesbocchio.jasyptspringboot.configuration.EnableEncryptablePropertiesBeanFactoryPostProcessor: warn
    com.ulisesbocchio: warn
    com.github.pagehelper.PageInterceptor: info
    com.alibaba: warn
    com.zaxxer.hikari: warn
    com.baomidou: warn
    com.netflix: warn
    com.sun: warn
    com.wechat.pay: info
    sun.net.www.protocol.http.HttpURLConnection: warn
    reactor.util.Loggers: info
    jdk.event.security: warn
    io.micrometer: warn
    io.lettuce: warn
    io.netty: warn
    io.github.resilience4j: info
    springfox: warn
    okhttp3.internal: info
    net.sf: warn
    javax.xml: warn
    javax.activation: warn
    javax.management: warn
    top.bettercode.summer.config.ManagementLoginPageGeneratingFilter: info
    top.bettercode.summer.web.resolver.ApiRequestMappingHandlerAdapter: info
    top.bettercode.summer.web.resolver.ApiExceptionHandlerExceptionResolver: info
    top.bettercode.summer.web.filter: info
    top.bettercode.summer.config.NavFilter: info
    top.bettercode.summer.logging.RequestLoggingFilter: info
    top.bettercode.summer.logging.RequestContentReadFilter: info
    top.bettercode.summer.web.support.client.ApiTemplate: info
